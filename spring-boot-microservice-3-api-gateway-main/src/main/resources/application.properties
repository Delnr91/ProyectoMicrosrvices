# ==========================
# Application Configuration
# ==========================
spring.application.name=api-gateway
server.port=5555

# ==========================
# DataSource Configuration (MySQL)
# ==========================
# Utiliza HikariCP por defecto.
spring.datasource.url=jdbc:mysql://localhost:3307/db_gateway?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
# NOTA: Parámetros como useSSL, createDatabaseIfNotExist pueden necesitar ajustes para producción/Render.
spring.datasource.username=admin
# NOTA: Externalizar contraseñas en entornos reales.
spring.datasource.password=AdminGeneral2025$
# El driver suele ser detectado automáticamente.
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# El dialecto suele ser detectado, pero especificarlo para MySQL 8+ es bueno.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# ==========================
# JPA / Hibernate Configuration
# ==========================
# Control DDL: 'validate' es más seguro que 'update'. Asume que el esquema existe y coincide.
spring.jpa.hibernate.ddl-auto=validate
# Mostrar SQL: 'false' para logs más limpios. Activar solo para depurar.
spring.jpa.show-sql=true

# ==========================
# Eureka Client Configuration
# ==========================
# El API Gateway también es un cliente Eureka para encontrar otros servicios
eureka.client.enabled=true
eureka.client.service-url.defaultZone=http://localhost:6666/eureka/

# ==========================
# JWT Configuration
# ==========================
# NOTA: Considerar externalizar el secreto JWT.
app.jwt.secret=RandomSecretKey123456789!RandomSecretKey123456789!RandomSecretKey123456789!
# 24 horas
app.jwt.expiration-in-ms=86400000 

# ==========================
# Custom Security Properties (Internal - Feign/BasicAuth)
# ==========================
# Usadas por FeignConfiguration para autenticarse con otros servicios
service.security.secure-key-username=daniKeySecureUsername
service.security.secure-key-password=daniKeySecureUsername!

# ==========================
# Service URLs (Opcional si Eureka funciona bien)
# ==========================
# Comentadas porque confiamos en Eureka
# inmueble.service.url=http://localhost:3333
# compras.service.url=http://localhost:4444

# ==========================
# Springdoc OpenAPI / Swagger UI Configuration (Gateway)
# ==========================
# Configuración para la documentación de los endpoints propios del Gateway (Auth/User)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.title=API Gateway - Gestión Inmobiliaria
springdoc.swagger-ui.description=Punto de entrada principal (Autenticación, Usuarios, Proxy a Inmuebles/Compras).
springdoc.swagger-ui.version=v0.0.1-SNAPSHOT
# springdoc.swagger-ui.contact.name=Tu Nombre
# springdoc.swagger-ui.contact.email=tuemail@example.com

logging.level.com.dani.spring_boot_microservice_3_api_gateway.request.UserContextRequestInterceptor=DEBUG
# Para ver más detalles de las llamadas Feign
logging.level.feign.Client=DEBUG 
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

# Username del administrador principal que no puede ser modificado/eliminado por otros admins
app.security.principal-admin-username=testuser
